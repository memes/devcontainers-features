---
name: "CI - Test Features"
# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      features: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            buf:
              - 'src/([^/]+)/install.sh'
              - 'test/buf/**'
            direnv:
              - 'src/([^/]+)/install.sh'
              - 'test/direnv/**'
            flux:
              - 'src/([^/]+)/install.sh'
              - 'test/flux/**'
            gcrane:
              - 'src/([^/]+)/install.sh'
              - 'test/gcrane/**'
            google-cloud-cli:
              - 'src/([^/]+)/install.sh'
              - 'test/google-cloud-cli/**'
            golangci-lint:
              - 'src/([^/]+)/install.sh'
              - 'test/golangci-lint/**'
            goreleaser:
              - 'src/([^/]+)/install.sh'
              - 'test/goreleaser/**'
            hashicorp:
              - 'src/([^/]+)/install.sh'
              - 'test/hashicorp/**'
            hadolint:
              - 'src/([^/]+)/install.sh'
              - 'test/hadolint/**'
            opentofu:
              - 'src/([^/]+)/install.sh'
              - 'test/opentofu/**'
            sops:
              - 'src/([^/]+)/install.sh'
              - 'test/sops/**'
            starship:
              - 'src/([^/]+)/install.sh'
              - 'test/starship/**'
            talisman:
              - 'src/([^/]+)/install.sh'
              - 'test/talisman/**'
            terraform-docs:
              - 'src/([^/]+)/install.sh'
              - 'test/terraform-docs/**'
            terragrunt:
              - 'src/([^/]+)/install.sh'
              - 'test/terragrunt/**'
            tflint:
              - 'src/([^/]+)/install.sh'
              - 'test/tflint/**'
            vesctl:
              - 'src/([^/]+)/install.sh'
              - 'test/vesctl/**'

  test-autogenerated:
    needs: changes
    if: ${{ needs.changes.outputs.features != '[]' }}
    runs-on: ubuntu-latest
    continue-on-error: true
    permissions:
      contents: read
    strategy:
      matrix:
        features: ${{ fromJSON(needs.changes.outputs.features) }}
        baseImage:
          - mcr.microsoft.com/devcontainers/base:alpine
          - mcr.microsoft.com/devcontainers/base:debian
          - mcr.microsoft.com/devcontainers/base:ubuntu
          - registry.fedoraproject.org/fedora:latest
          - registry.access.redhat.com/ubi9/ubi:latest
    steps:
      - uses: actions/checkout@v5

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test --skip-scenarios -f ${{ matrix.features }} -i ${{ matrix.baseImage }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-scenarios:
    needs: changes
    if: ${{ needs.changes.outputs.features != '[]' }}
    runs-on: ubuntu-latest
    continue-on-error: true
    permissions:
      contents: read
    strategy:
      matrix:
        features: ${{ fromJSON(needs.changes.outputs.features) }}
    steps:
      - uses: actions/checkout@v5

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' scenarios"
        run: devcontainer features test -f ${{ matrix.features }} --skip-autogenerated --skip-duplicated
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-global:
    needs: changes
    if: ${{ needs.changes.outputs.features != '[]' }}
    runs-on: ubuntu-latest
    continue-on-error: true
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
