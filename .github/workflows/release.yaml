---
name: "Release dev container features & Generate Documentation"
# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  release:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      packages: write
    steps:
      - name: Release Please
        id: release_please
        uses: GoogleCloudPlatform/release-please-action@v4.2.0
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
      - uses: actions/checkout@v4
        if: ${{ fromJson(steps.release_please.outputs.releases_created) }}
      - name: "Publish Features"
        if: ${{ fromJson(steps.release_please.outputs.releases_created) }}
        uses: devcontainers/action@v1
        with:
          publish-features: "true"
          base-path-to-features: "./src"
          generate-docs: "true"
          disable-repo-tagging: "true"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create PR for Documentation
        if: ${{ fromJson(steps.release_please.outputs.releases_created) }}
        id: push_image_info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          echo "Start."
          # Configure git and Push updates
          git config --global user.email github-actions[bot]@users.noreply.github.com
          git config --global user.name github-actions[bot]
          git config pull.rebase false
          branch=automated-documentation-update-$GITHUB_RUN_ID
          git checkout -b $branch
          message='Automated documentation update'
          # Add / update and commit
          git add */**/README.md
          git commit -m 'docs: Automated documentation update [skip ci]' || export NO_UPDATES=true
          # Push
          if [ "$NO_UPDATES" != "true" ] ; then
              git push origin "$branch"
              gh pr create --title "$message" --body "$message"
          fi
